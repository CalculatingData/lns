{
  "name": "Examples",
  "tagline": "面向连接编程示例工程，含有：ecm,net,plus,netdisk,website,neuron,mdisk,cjnet 等示例",
  "body": "本例程源自：http://www.cjlns.com\r\ncjlns.com平台，是以面向连接编程实现的，从架构到部署均采用了连接体系。\r\n\r\n 《面向连接编程》http://www.cjlns.com/portlets/center/portlet-00001-show/views/ecm.html\r\n \r\n\t面向连接编程是一个完整的工具体系,从web的mvc到存储层，从开发工具到分布式部署，一套完整的开发和工具体系，从而可以使用户摆脱那种拼拼补补的开发现状。\r\n面向连接的工具体系的优势在于，在架构层面，比spring更简单易用，比osgi更省事，比nodejs在服务器端的开发更规范，而且与java共生。\r\n\r\n\t其中的ecm开发工具包兼有spring、osgi、nodejs的功能。支持面向模块开发与部署，热插拔。 \t\r\n\t其中的net开发工具包,支持web的开发，并且可以完全使用js开发web应用，它的语法更接近于流行的nodejs，其它实现有基于netty的nio和自行开发的nio框架rio,rio叫响应式nio框架，它即有nio的优势，又有同步等待响应的能力。\r\n\t其中的plus开发工具包，进一步增强了连接的能力，如web应用的插件化（支持像eclipse这样的插件架构），支持像webservice这种远程服务的能力，支持云计算芯片的开发。\r\n\t其中的netdisk是基于mongodb的增加工具，它实现了网盘的各种功能，支持文件存取及结构化数据存取，支持多维，用户配额，开发上类似支持、对象映射支持。\r\n\t其中的神经元命令行工具，具有像tomcat/jetty等服务容器的功能，更多的是它具有向后连接的特性，是组建大型分布式神经网络的节点工具。它的目的就是组建神经网络集群。\r\n\t其中的mdisk命令行工具，它是以命令行窗口实现的网盘工具，以netdisk为核心，方便mongodb的开发、测试和运维管理。它用起来非常简单，只要连到你的mongodb即可将mongodb当成网盘数据库，且对原mongodb的库不受影响。\r\n\t其中的cjnet 用于调试neuron中的应用程序和netsite中的应用程序，它是一个cj studio中有关net产品开发和调试必不可少的工具。\r\n\t其中的netsite也是一个像tomcat/jetty等服务容器的命令行工具，它与神经元的区别在于，它只能部署在神经网络的终端，而不能成为其中间节点。它的优点在于，它可以部署成百上千个应用，而在一个神经元节点上一般不这么做。此工具暂时停止了升级。\r\n\t\r\n· 介绍： ecm 面向连接电子模型开发工具包 http://cjlns.com/portlets/center/portlet-00002-coding/views/intro_ecm.html\r\n· 介绍： net 通讯开发工具包 http://cjlns.com/portlets/center/portlet-00002-coding/views/intro_net.html\r\n· 介绍： plus 模块化、插件化、服务化增强开发工具包 http://cjlns.com/portlets/center/portlet-00002-coding/views/intro_plus.html\r\n· 介绍： netdisk 多维云盘开发工具包 http://www.cjlns.com/portlets/center/portlet-00002-coding/views/intro_netdisk.html\r\n· 介绍： neuron 分布式连接容器 http://cjlns.com/portlets/center/portlet-00002-coding/views/intro_neuron.html\r\n· 介绍： netsite 热插拔应用容器 http://www.cjlns.com/portlets/center/portlet-00002-coding/views/intro_netsite.html\r\n· 介绍： mdisk 多维云盘命令行工具 http://www.cjlns.com/portlets/center/portlet-00002-coding/views/intro_mdisk.html\r\n· 介绍： cjnet 调试、测试命令行工具 http://www.cjlns.com/portlets/center/portlet-00002-coding/views/intro_cjnet.html\r\n\r\n\r\ncj studio的产品系列，有一部分遵循apache开源协议的，一部分是开放而暂未开源的，但是均可在商业中免费使用。\r\n\r\n\t对于开源我是这么看的，许多用户并不关心你的源码，也从来不看，一般都是直接引用jar，反倒开源使他们无从下载，不知从何入手，因此我才没有将那几个开发工具包的源码放上去。但是，对于尚未开源的核心源码，视开发者的呼声，随时都可以放上去。\r\n\r\n示例和第三方开发的开放源码托管到 github, codeproject, sourceforge，oschina, csdn，基本每日更新。\r\n\r\n最新消息在两个地方发布：\r\n1. 云网官方网站：http://www.cjlns.com，发布产品消息，提供在线演示，交流相关技术，分享互联网创业经验，欢迎访问。\r\n2. 每日源码更新动态，可以通过 Github 自带的动态消息 查看\r\n\r\n源码托管网址(全部同步)：\r\n* (国外)GitHub: https://github.com/carocean/examples\r\n* (国外)codeproject: http://www.codeproject.com\r\n* (国外)sourceforge: http://www.sourceforge.com\r\n* (国内)开源中国: http://git.oschina.net/\r\n* (国内)CSDN: https://code.csdn.net/\r\n\r\nweb开发使用js作为服务的示例：\r\n\r\n\t/*\r\n\t * 说明：\r\n\t * 作者：extends可以实现一种类型，此类型将可在java中通过调用服务提供器的.getServices(type)获取到。\r\n\t * <![jss:{\r\n\t\t\tscope:'runtime'\r\n\t \t}\r\n\t ]>\r\n\t <![desc:{\r\n\t\tttt:'2323',\r\n\t\tobj:{\r\n\t\t\tname:'09skdkdk'\r\n\t\t\t}\r\n\t * }]>\r\n\t */\r\n\t//var imports = new JavaImporter(java.io, java.lang)导入类型的范围，单个用Java.type\r\n\tvar Frame = Java.type('cj.studio.ecm.frame.Frame');\r\n\tvar FormData = Java.type('cj.studio.ecm.frame.FormData');\r\n\tvar FieldData = Java.type('cj.studio.ecm.frame.FieldData');\r\n\tvar Circuit = Java.type('cj.studio.ecm.frame.Circuit');\r\n\tvar ISubject = Java.type('cj.lns.chip.sos.website.framework.ISubject');\r\n\tvar String = Java.type('java.lang.String');\r\n\tvar CircuitException = Java.type('cj.studio.ecm.graph.CircuitException');\r\n\tvar ServiceosWebsiteModule = Java\r\n\t\t\t.type('cj.lns.common.sos.website.moduleable.ServiceosWebsiteModule');\r\n\tvar Gson = Java.type('cj.ultimate.gson2.com.google.gson.Gson');\r\n\tvar StringUtil = Java.type('cj.ultimate.util.StringUtil');\r\n\tvar Document = Java.type('org.jsoup.nodes.Document');\r\n\tvar Jsoup = Java.type('org.jsoup.Jsoup');\r\n\tvar WebUtil = Java.type('cj.studio.ecm.net.web.WebUtil');\r\n\tvar IServicewsContext = Java.type('cj.lns.chip.sos.website.framework.IServicewsContext');\r\n\tvar TupleDocument = Java.type('cj.lns.chip.sos.cube.framework.TupleDocument');\r\n\tvar System = Java.type('java.lang.System');\r\n\tvar colName='article.relatives';\r\n\tvar HashMap = Java.type('java.util.HashMap');\r\n\tvar SimpleDateFormat = Java.type('java.text.SimpleDateFormat');\r\n\tvar Date = Java.type('java.util.Date');\r\n\t\r\n\tfunction createComment(map,cube,sws,circuit){\r\n\t\tvar artid=map.get('artid');\r\n\t\tvar to=map.get('to');\r\n\t\tvar comment=map.get('comment');\r\n\t\tvar thread=map.get('thread');\r\n\t\tvar author='';//文章作者\r\n\t\tvar reviewerface=sws.visitor().face();\r\n\t\tvar reviewer=sws.visitor().principal();//评论者\r\n\t\tvar ctime=System.currentTimeMillis();//评论时间\r\n\t\t//求作者\r\n\t\tvar cjql=\"select {'tuple.creator':1} from tuple article.entities java.util.HashMap where {'_id':ObjectId('?(id)')}\";\r\n\t\tvar q=cube.createQuery(cjql);\r\n\t\tq.setParameter('id',artid);\r\n\t\tvar doc=q.getSingleResult();\r\n\t\tauthor=doc.tuple().get('creator');\r\n\t\tif('@'==to){//评论给文章作者\r\n\t\t\tto=author;\r\n\t\t}else{\r\n\t\t\tto=to.substring(1,to.length);\r\n\t\t}\r\n\t\t\r\n\t\tvar tuple=new HashMap();\r\n\t\ttuple.put('artid',artid);\r\n\t\ttuple.put('thread',thread);//所属的主贴\r\n\t\ttuple.put('reviewer',reviewer);\r\n\t\ttuple.put('reviewerFace',reviewerface);\r\n\t\ttuple.put('to',to);\r\n\t\ttuple.put('prefix','@');\r\n\t\ttuple.put('kind','comment');//评论类型\r\n\t\ttuple.put('comment',comment);\r\n\t\ttuple.put('ctime',ctime);\r\n\t\tvar newdoc=new TupleDocument(tuple);\r\n\t\tvar commentid=cube.saveDoc(colName,newdoc);\r\n\t\t\r\n\t\tvar retmap=new HashMap();\r\n\t\tretmap.put('commentid',commentid);\r\n\t\tretmap.put('reviewerId',reviewer);\r\n\t\tretmap.put('to',to);\r\n\t\tretmap.put('reviewerFace',reviewerface);\r\n\t\tvar format=new SimpleDateFormat(\"hh:mm MM月dd日\");\r\n\t\tvar timeDisplay=format.format(new Date(ctime));\r\n\t\tretmap.put('ctime',timeDisplay);\r\n\t\tcircuit.content().writeBytes(new Gson().toJson(retmap).getBytes());\r\n\t}\r\n\tfunction delComment(map,cube,sws,circuit){\r\n\t\tvar commentid=map.get('commentid');\r\n\t\tcube.deleteDoc(colName,commentid);\r\n\t}\r\n\tfunction toggleGreat(map,cube,sws,circuit){\r\n\t\tvar artid=map.get('artid');\r\n\t\t//返回评论号，评论者的face\r\n\t\tvar reviewerface=sws.visitor().face();\r\n\t\tvar reviewer=sws.visitor().principal();//评论者\r\n\t\t//看看是否点了赞，如果是已点则取消\r\n\t\tvar cjql=\"select {'tuple':'*'}.count() from tuple ?(colName) java.lang.Long where {'tuple.kind':'great','tuple.artid':'?(artid)','tuple.reviewer':'?(reviewer)'}\";\r\n\t\tvar q=cube.createQuery(cjql);\r\n\t\tq.setParameter('artid',artid);\r\n\t\tq.setParameter('colName',colName);\r\n\t\tq.setParameter('reviewer',reviewer);\r\n\t\tvar count=q.count();\r\n\t\tif(count>0){//取消\r\n\t\t\tcube.deleteDocOne(colName,String.format(\"{'tuple.artid':'%s','tuple.reviewer':'%s','tuple.kind':'great'}\",artid,reviewer));\r\n\t\t\tvar retmap=new HashMap();\r\n\t\t\tretmap.put('reviewerId',reviewer);\r\n\t\t\tretmap.put('cancel','true');//是点赞还是取消\r\n\t\t\tretmap.put('reviewerFace',reviewerface);\r\n\t\t\tcircuit.content().writeBytes(new Gson().toJson(retmap).getBytes());\r\n\t\t}else{\r\n\t\t\tvar ctime=System.currentTimeMillis();//评论时间\r\n\t\t\t\r\n\t\t\tvar tuple=new HashMap();\r\n\t\t\ttuple.put('artid',artid);\r\n\t\t\ttuple.put('reviewer',reviewer);\r\n\t\t\ttuple.put('reviewerFace',reviewerface);\r\n\t\t\ttuple.put('kind','great');//评论类型\r\n\t\t\ttuple.put('ctime',ctime);\r\n\t\t\tvar newdoc=new TupleDocument(tuple);\r\n\t\t\tvar greatid=cube.saveDoc(colName,newdoc);\r\n\t\t\tvar retmap=new HashMap();\r\n\t\t\tretmap.put('reviewerId',reviewer);\r\n\t\t\tretmap.put('cancel','false');//是点赞还是取消\r\n\t\t\tretmap.put('reviewerFace',reviewerface);\r\n\t\t\tvar format=new SimpleDateFormat(\"hh:mm MM月dd日\");\r\n\t\t\tvar timeDisplay=format.format(new Date(ctime));\r\n\t\t\tretmap.put('ctime',timeDisplay);\r\n\t\t\tcircuit.content().writeBytes(new Gson().toJson(retmap).getBytes());\r\n\t\t}\r\n\t}\r\n\tfunction toggleFollow(map,cube,sws,circuit){\r\n\t\tvar artid=map.get('artid');\r\n\t\t//返回评论号，评论者的face\r\n\t\tvar reviewerface=sws.visitor().face();\r\n\t\tvar reviewer=sws.visitor().principal();//评论者\r\n\t\t//看看是否关注了，如果是已点则取消\r\n\t\tvar cjql=\"select {'tuple':'*'}.count() from tuple ?(colName) java.lang.Long where {'tuple.kind':'follow','tuple.artid':'?(artid)','tuple.reviewer':'?(reviewer)'}\";\r\n\t\tvar q=cube.createQuery(cjql);\r\n\t\tq.setParameter('artid',artid);\r\n\t\tq.setParameter('colName',colName);\r\n\t\tq.setParameter('reviewer',reviewer);\r\n\t\tvar count=q.count();\r\n\t\tif(count>0){//取消\r\n\t\t\tcube.deleteDocOne(colName,String.format(\"{'tuple.artid':'%s','tuple.reviewer':'%s','tuple.kind':'follow'}\",artid,reviewer));\r\n\t\t\tvar retmap=new HashMap();\r\n\t\t\tretmap.put('cancel','true');//是关注还是取消\r\n\t\t\tcircuit.content().writeBytes(new Gson().toJson(retmap).getBytes());\r\n\t\t}else{\r\n\t\t\tvar ctime=System.currentTimeMillis();//评论时间\r\n\t\t\tvar tuple=new HashMap();\r\n\t\t\ttuple.put('artid',artid);\r\n\t\t\ttuple.put('reviewer',reviewer);\r\n\t\t\ttuple.put('reviewerFace',reviewerface);\r\n\t\t\ttuple.put('kind','follow');//评论类型\r\n\t\t\ttuple.put('ctime',ctime);\r\n\t\t\tvar newdoc=new TupleDocument(tuple);\r\n\t\t\tvar greatid=cube.saveDoc(colName,newdoc);\r\n\t\t\tvar retmap=new HashMap();\r\n\t\t\tretmap.put('cancel','false');//是点赞还是取消\r\n\t\t\tcircuit.content().writeBytes(new Gson().toJson(retmap).getBytes());\r\n\t\t}\r\n\t}\r\n\tfunction doShare(map,cube,sws,circuit){\r\n\t\t\r\n\t}\r\n\texports.flow = function(frame, circuit, plug, ctx) {\r\n\t\tvar m = ServiceosWebsiteModule.get();\r\n\t\tvar map=WebUtil.parserParam(new String(frame.content().readFully()));\r\n\t\tvar sws=IServicewsContext.context(frame);\r\n\t\tvar disk=m.site().diskOwner(sws.owner());\r\n\t\tif(!disk.existsCube(sws.swsid())){\r\n\t\t\tthrow new CircuitException('404','视窗空间不存在');\r\n\t\t}\r\n\t\tvar cube=disk.cube(sws.swsid());\r\n\t\tvar action=map.get('action');\r\n\t\tswitch(action){\r\n\t\tcase 'comment':\r\n\t\t\tcreateComment(map,cube,sws,circuit);\r\n\t\t\tbreak;\r\n\t\tcase 'great':\r\n\t\t\ttoggleGreat(map,cube,sws,circuit);\r\n\t\t\tbreak;\r\n\t\tcase 'follow':\r\n\t\t\ttoggleFollow(map,cube,sws,circuit);\r\n\t\t\tbreak;\r\n\t\tcase 'share':\r\n\t\t\tdoShare(map,cube,sws,circuit);\r\n\t\t\tbreak;\r\n\t\tcase 'delComment':\r\n\t\t\tdelComment(map,cube,sws,circuit);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t//circuit.content().writeBytes(String.format(\"{'id':'%s'}\",phyId).getBytes())\t;\r\n\t}",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}